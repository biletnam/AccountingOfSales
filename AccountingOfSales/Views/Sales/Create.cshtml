@model AccountingOfSales.Models.Sale

@{
    ViewBag.Title = "Создание продажи";
    DateTime dateNow = DateTime.Now;
}

<h2>Создание продажи</h2>
<br />
@using (Html.BeginForm("Create", "Sales", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8" style="width:500px; margin-right:0px">
            <div class="form-horizontal">
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.Label("Продукт", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.DropDownList("ProductId", ViewBag.Products as SelectList, new { @class = "form-control", id = "product" })
                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SaleDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.Hidden("SaleDate", dateNow.ToShortDateString())
                        @Html.TextBox("SaleDate2", dateNow.ToShortDateString(), htmlAttributes: new { @class = "form-control", disabled = true })
                        @Html.ValidationMessageFor(model => model.SaleDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RetailPrice, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7" id = "retailPrice">
                        @Html.Hidden("RetailPrice", (int)ViewBag.RetailPrice)    @*скрытое поле необходимо, чтобы значение передавалось в POST действие*@
                        @Html.TextBox("Price", (int)ViewBag.RetailPrice, new { @class = "form-control", disabled=true })
                        @Html.ValidationMessageFor(model => model.RetailPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-7">
                        <input type="submit" value="Создать" class="btn btn-primary" />
                        @Html.ActionLink("Отмена", "Create", "Sales", htmlAttributes: new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>            
        </div>
        <div class="col-md-2" id="imgProduct">
            @if (ViewBag.ImageProduct != null)
            {
                <img src="~/Images/@ViewBag.ImageProduct" height="300" class="img-rounded" />
            }
        </div>
    </div>
}
@using (Html.BeginForm("Create", "Sales", new { emptingSale = true }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ActionLink("Вернуться на главную", "Index", "Sales", htmlAttributes: new { @class = "btn btn-default" })
    <input type="submit" value="Создать пустую продажу" class="btn btn-default" />
}


@section scripts {
    <script type="text/javascript">
        @if(ViewBag.CreateSale != null)
        {
            <text>alert("Продажа успешно создана!");</text>
        }

        //получаем розничную цену, для выбранного продукта
        $(function () {
            $('#product').change(function () {
                // получаем выбранный id
                var id = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetRetailPrice")/' + id,
                    success: function (data) {

                        // заменяем содержимое присланным частичным представлением
                        $('#retailPrice').replaceWith(data);
                    }
                });
            });
        })

        //получаем фото, для выбранного продукта
        $(function () {
            $('#product').change(function () {
                // получаем выбранный id
                var id = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetImageProduct")/' + id,
                    success: function (data) {

                        // заменяем содержимое присланным частичным представлением
                        $('#imgProduct').replaceWith(data);
                    }
                });
            });
        })

    </script>
}
